/*
	IIB2019032 | LAB2 | DS
	
	TASK
	-> Create a linked list of 5 nodes
		-> Add new nodes to the beginning
					end
					in between
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node *next;
};

struct node  *head=NULL;
void insert_begin(int x)	// Function to insert the new node at the beginning
{	
	struct node *temp;
	temp=(struct node *)malloc(sizeof(struct node));
	temp->data=x;
	temp->next=head;
	head=temp;
}
void insert_end(int x)		// Function to insert the new node at the end of linked list
{
	struct node *temp;
	temp=(struct node *)malloc(sizeof(struct node));
	temp->data=x;
	temp->next=NULL;
	if(head==NULL)
	{
		head=temp;
		return;
	}
	struct node *temp1;
	temp1=head;
	while(temp1->next!=NULL)
	{
		temp1=temp1->next;
	}
	temp1->next=temp;
}
void insert_spec(int x, int pos)	// Function to insert the new node at the specified poistion
{
	if(head==NULL)
	{
		if(head->next==NULL)
		printf("Linked list has only one node, Please add more nodes\n");
		else
		printf("Linked list is empty, Please add some nodes\n");
		return;
	}	
	int count;
	struct node *temp;
	temp=(struct node *)malloc(sizeof(struct node));
	temp->data=x;
	if(pos==1)
	{
		temp->data=x;
		temp->next=head;
		head=temp;
		return;
	}
	struct node *temp1;
	temp1=head;
	for(count=1;count<(pos-1);++count)
	{
		temp1=temp1->next;
	}
	temp->next=temp1->next;
	temp1->next=temp;
}
	
void print()		// Function to print the node starting from beginning
{
	struct node *temp;
	temp=head;
	printf("Your linked list is :-\n");
	while(temp!=NULL)
	{
		printf("%d ",temp->data);
		temp=temp->next;
	}
	printf("\n");
}

void delete(int pos)	// Function to delete a node at the specified position
{
	print();
	struct node *temp1;
	temp1=head;
	int count;
	for(count=1;count<(pos-1);++count)
	{
		temp1=temp1->next;
	}
	struct node *del_temp;
	del_temp=temp1->next;
	temp1->next=(temp1->next)->next;
	free(del_temp);
	printf("After deletion, ");
	print();
}

void reverse_list()
{
	struct node  *traverse;
	struct node *temp1,*temp2;
	traverse=head;
	traverse=head->next;
	temp2=head;
	while(traverse->next!=NULL)
	{
		temp1=traverse->next;
		traverse->next=temp2;
		temp2=traverse;
		traverse=temp1;
	}
	head->next=NULL;
	traverse->next=temp2;
	head=traverse;
}

int main()
{	
	int n=5,i,x,pos;
	int option=-1;
	printf("Enter 1 to add nodes from beginning , 0 to add them at the end \n");
	scanf("%d",&option);
	printf("Enter 5 integer values for the linked list :-\n");
	if(option==1)	// If user enters 1, new node is to be added from beginning
	{
			for(i=0;i<5;++i)
		{
			scanf("%d",&x);
			insert_begin(x);
			print();
		}
	}

	if(option==0)
	{
			for(i=0;i<5;++i)                                                                                                 
		{
			scanf("%d",&x);
			insert_end(x);
			print();
		}
	}

	printf("Enter nodes and position for new 3 nodes\n");
	for(i=0;i<3;++i)
	{
		printf("Data-> ");
		scanf("%d",&x);	
		printf("Position-> ");
		scanf("%d",&pos);	// User enter the position at which new node is to be inserted
		printf("\n");	
		insert_spec(x,pos);
		print();
	}	
	
	printf("\n Now, to delete the specified node enter their position in the linked list \n");
	print();
	int del;
	for(i=0;i<3;++i)
	{
		printf("pos-> ");
		scanf("%d",&del);	// User enter the postion of the node to be deleted
		delete(del);
		printf("Now ");
		print();		// After deletion linked list is printed to displayed the changes
	}
	reverse_list();
	printf("Reversed Linked list\n");
	print();
}
